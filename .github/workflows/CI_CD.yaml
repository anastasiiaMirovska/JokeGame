name: Jokes API Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: user
          MONGO_INITDB_DATABASE: my_database
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --eval \"db.adminCommand('ping')\"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: cd backend && npm install

      - name: Copy environment file
        run: |
          if [ -f "./backend/.env.example" ]; then
            cp ./backend/.env.example ./backend/.env
          else
            echo "MONGO_INITDB_ROOT_USERNAME=user" > ./backend/.env
            echo "MONGO_INITDB_ROOT_PASSWORD=user" >> ./backend/.env
            echo "MONGO_INITDB_DATABASE=my_database" >> ./backend/.env
            echo "DATABASE_URL=mongodb://user:user@localhost:27017/my_database?authSource=admin" >> ./backend/.env
          fi

      - name: Initialize MongoDB
        run: |
          if [ -f "./backend/.dataBase/mongo-init.js" ]; then
            mongosh "mongodb://user:user@localhost:27017/admin" --file ./backend/.dataBase/mongo-init.js
          fi

      - name: Run tests
        run: cd backend && npm test
        env:
          NODE_ENV: test
          DATABASE_URL: mongodb://user:user@localhost:27017/my_database?authSource=admin


#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#
#jobs:
#  build-and-test:
#    runs-on: ubuntu-latest
##    services:
##      mongodb:
##        image: mongo:latest
##        ports:
##          - 27018:27017
#
#    steps:
#      - name: Checkout репозиторій
#        uses: actions/checkout@v4
#
#      - name: Встановлення Docker Compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#
#      - name: Створення .env для бекенду
#        run: |
#          echo "${{ secrets.BACKEND_ENV }}" > backend/.env
#          echo "MONGODB_URI=mongodb://user:user@db:27017/my_database?authSource=admin" >> backend/.env
#
#      - name: Запуск Docker-контейнерів
#        run: docker-compose up -d --build
#
##      - name: Очікування запуску сервісів
##        run: sleep 20  # Дати час контейнерам піднятися
##
#      - name: Запуск тестів у контейнері
#        run: docker exec jokegame_app_1 npm test
#
#      - name: Завершення контейнерів
#        run: docker-compose down